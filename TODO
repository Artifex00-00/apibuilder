Consider supporting (from swagger):
  - "default" keyword for responses
  - add "apidoc": "0.x" // maps to the version of the apidoc-api spec,
    currently 0.8.18. Not required. Defaults to latest version
  - add license, info, documentation. Remove description from top level (replaced with info.description)
  - add support for github markdown
     - say we do it and just start rendering
  - parameter locations: header, cookie
  - add headers to response object

Think about:
  - replace base_url with urls which would be an array of [ url, description ]

Make lookup function of sealed traits case insensitive
  - can then remove toParameterLocation

Add support for multiple input types:
  - consider support for swagger.json here

Breaking changes:
  - Change 404s to be explicit

Generators:
  - Cache the generators

UX:

  - On adding watch, check subscription and offer the user to enable
    the relevant subscriptions if not subscribed

  - On service visibility - if service is public and org is NOT, add
    note that the service will not be visible until the org is made
    public.

Ability to diff two versions of a service, producing a human readable
output of the changes. Use this as the basis for determining backwards
incompatible changes.

Org level setting to enable semver versioning (default on)
  - prevent backwards incompatible changes once at major version 1

Implement subscriptions.findAll authorization filter

Implement backwards compatibility layer - each new version of a
service should be automatically validated against the latest version
with the same major version number. Consider if we require semver
versioning or not.

Automate end to tests of generated clients. Currently client libraries
are tested offline and manually. Need to think through how testing
will work across mulitple platforms.
  
api.json: Support authentication, documentation
  
Swagger 2.0 was released in September 2014. Explore if swagger 2.0 can become the input spec for apidoc.
