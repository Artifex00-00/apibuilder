add namespace
 => rename package name to default namespace for organization
 => reject services that are uploaded w/out a namespace
 => Globally validate that namespace uniquely identifies a single service
 => Add support to resolve types based on the full namespace

add major version number to package name

http://www.apidoc.me/org/create
 => Ask for org domain and namespace - both optional
 => use domain as default namespace for the org
 => if not specified, default namespace can be "me.apidoc.org.<org
    name>" or something

Make base url optional
  - if included, make it part of the generated client

Add link to /generators

rename TypeKind => Kind

make method an enum to make list of http methods explicit

users need nicknames
  - then display nicknames throughout the UI

Cache the generators

Email verification process, including auto add to orgs based no email
  domain if there is a membership request pending

UX:

  - On adding watch, check subscription and offer the user to enable
    the relevant subscriptions if not subscribed

  - On service visibility - if service is public and org is NOT, add
    note that the service will not be visible until the org is made
    public.

Org level setting to enable semver versioning (default on)
  - prevent backwards incompatible changes once at major version 1

Support for testing

Replace ValidationError with com.gilt.apidoc.models.Error

Email user when their membership request has been processed

Implement subscriptions.finaAll authorization filter

Add user_form to api.json and remove db.UserDao.UserForm