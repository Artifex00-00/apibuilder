{
    "base_url": "http://ec2-54-186-203-157.us-west-2.compute.amazonaws.com:9000/service/iris-hub/vendor",
    "name": "Api Server",
    "description": "Designed to host API documentation for REST services.",
    "resources": {

        "service": {
            "path": "/services",
            "description": "A service has a name and multiple versions of an API (Interface).",
            "fields": [
                { "name": "guid", "type": "string", "description": "Internal unique identifier for this service." },
                { "name": "name", "type": "string", "description": "The unique name for this service." },
                { "name": "key", "type": "string", "description": "Used as a unique key in the URL path. Key is automatically derived from the service name." }
            ],
            "operations": [
                {
                    "method": "GET",
                    "description": "Search all services. Results are always paginated.",
                    "parameters": [
                        { "name": "name", "type": "string", "required": false, "description": "Finds the service with this name. Exact match" },
                        { "name": "key", "type": "string", "required": false, "description": "Finds the service with this key. Exact match" },
                        { "name": "limit", "type": "integer", "default": 50, "description": "The number of records to return", "minimum": 0, "maximum": 50 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "response": ["service"]
                },
                {
                    "method": "GET",
                    "path": "/:service",
                    "description": "See all versions for this service. Results are always paginated.",
                    "parameters": [
                        { "name": "limit", "type": "integer", "default": 50, "description": "The number of records to return", "minimum": 0, "maximum": 50 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "response": ["service"]
                }
            ]
        },

        "version": {
            "path": "/services/versions",
            "description": "Represents a unique version of the service.",
            "fields": [
                { "name": "guid", "type": "string", "description": "Internal unique identifier for this version." },
                { "name": "version", "type": "string", "description": "The tag for this version (e.g. 1.2.3). Can be anything, but if semver style version number is used, we can automatically correctly sort by version number to find latest. Otherwise latest version is considered to be the most recently created." },
                { "name": "json", "type": "string", "description": "JSON description of the service." }
            ],
            "operations": [

                {
                    "method": "GET",
                    "path": "/services/:service/:version",
                    "description": "See all versions for this service version, including the detailed json specification.",
                    "response": "version"
                },

                {
                    "method": "POST",
                    "path": "/services/:service/:version",
                    "parameters": [
                        { "name": "json", "type": "string", "description": "Description of this service in JSON" }
                    ],
                    "response": "version"
                }
            ]
        }
    }

}
