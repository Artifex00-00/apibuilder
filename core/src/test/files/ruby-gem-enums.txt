class AgeGroup

  THIRTIES = AgeGroup.new("Thirties")
  FORTIES = AgeGroup.new("Forties")

  attr_reader :value

  def initialize(value)
    @value = HttpClient::Preconditions.assert_class('value', value, String)
  end

  def AgeGroup.all
    [THIRTIES, FORTIES]
  end

  # Returns the instance of AgeGroup for this value, creating a new instance for an unknown value
  def AgeGroup.apply(value)
    if value.instance_of?(AgeGroup)
      value
    else
      HttpClient::Preconditions.assert_class_or_nil('value', value, String)
      value.to_s.strip == "" ? nil : (from_string(value) || AgeGroup.new(value))
    end
  end

  # Returns the instance of AgeGroup for this value, or nil if not found
  def AgeGroup.from_string(value)
    HttpClient::Preconditions.assert_class('value', value, String)
    all.find { |v| v.value == value }
  end

end
