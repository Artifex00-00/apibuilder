#!/usr/bin/env ruby

# usage:
#  script/tag [major|minor|micro]
#  micro assumed unless specified

tag = `sem-info tag next #{ARGV.first}`.strip

git_version = "git.version"

files = ['api/conf/base.conf', 'www/conf/base.conf']
files.each do |path|
  next if !File.exists?(path)
  
  found = false
  tmp = "#{path}.tmp"
  begin
    File.open(tmp, "w") do |out|
      IO.readlines(path).each do |l|
        key,value = l.split("=", 2).map(&:strip)
        if key == git_version
          out << "#{git_version}=%s\n" % tag
          found = true
        else
          out << l
        end
      end

      if !found
        out << "\n#{git_version}=%s\n" % tag
      end
    end

    system("mv #{tmp} #{path}")
  end

end

# Now update docs
`find www/app/views -type f -name "*.scala.html"`.strip.split.each do |path|
  found = false
  tmp = "#{path}.tmp"
  begin
    File.open(tmp, "w") do |out|
      IO.readlines(path).each do |l|
        out << l.gsub(/\<\!\-\-\s*NEXT_TAG\s*\-\-\>/, tag)
      end
    end
    system("mv #{tmp} #{path}")
  end

end

def run(command)
  puts command
  system(command)
end

run("git commit -m 'Update configuration to record version #{tag}' " + files.join(" "))
run("git tag -a -m #{tag} #{tag}")
run("git push --tags origin")
run("git push origin master")
