#!/usr/bin/env ruby

# usage:
#  script/tag [major|minor|micro]
#  micro assumed unless specified

tag = `sem-info tag next #{ARGV.first}`.strip

apidoc_version = "apidoc.version"

files = ['api/conf/base.conf', 'www/conf/base.conf']
files.each do |path|
  if !File.exists?(path)
    raise "file does not exist: " + path
  end
  
  found = false
  tmp = "#{path}.tmp"
  begin
    File.open(tmp, "w") do |out|
      IO.readlines(path).each do |l|
        key,value = l.split("=", 2).map(&:strip)
        if key == apidoc_version
          out << "#{apidoc_version}=%s\n" % tag
          found = true
        else
          out << l
        end
      end

      if !found
        out << "\n#{apidoc_version}=%s\n" % tag
      end
    end

    system("mv #{tmp} #{path}")
  end

end

def run(command)
  puts command
  system(command)
end

run("git commit -m 'Update configuration to record apidoc version #{tag}' " + files.join(" "))
run("git tag -a -m #{tag} #{tag}")
run("git push --tags origin")
run("git push origin master")
