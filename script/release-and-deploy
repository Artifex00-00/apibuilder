#!/usr/bin/env ruby

tag = `sem-info tag next`.strip

if tag.to_s == ""
  raise "Missing tag"
end

def run(cmd)
  puts cmd
  system(cmd)
end

class Commands

  MAX_INDEX = 10000

  def initialize(dir)
    @index = 1001
    @dir = dir
    if !File.directory?(@dir)
      raise "Directory[%s] does not exist"
    end
  end

  def add(cmd, opts={})
    name = opts.delete(:name)
    if !opts.empty?
      raise "Invalid opts: %s" % opts.inspect
    end

    if @index == MAX_INDEX
      raise "Too many commands (would fail lexicographic sorting if we added this command)"
    end

    filename = @index.to_s
    if name
      filename << "-"
      filename << name.downcase.gsub(/[^a-zA-Z0-9\-\_]/, '-').gsub(/\_/, '-').gsub(/\-\-+/, '-')
    end

    path = File.join(@dir, filename)
    @index += 1

    File.open(path, "w", 0777) do |out|
      out << "#/bin/sh\n"
      out << "set -x #echo on\n"
      out << "\n"
      out << cmd
      out << "\n"
    end
  end

end

class Executor

  def initialize(dir)
    @dir = dir
    if !File.directory?(@dir)
      raise "Directory[%s] does not exist"
    end
  end

  def run
    files = Dir.glob("#{DIR}/1*").sort
    files.each_with_index do |path, i|
      puts "#{i + 1}/#{files.length}: #{path}"
      system(path)
    end
  end

end

DIR = "/tmp/apidoc-deploy"
if File.exists?(DIR)
  run("rm -rf #{DIR}")
end
run("mkdir #{DIR}")

commands = Commands.new(DIR)

commands.add("git tag -a -m %s %s" % [tag, tag],
             :name => "create-tag")
commands.add("git push --tags origin",
             :name => "push-tag")

%w(api www).each do |project|
  commands.add("/web/metadata-architecture/exec script/build-docker-image apidoc #{project} #{tag}",
               :name => "#{project} build docker image")
  commands.add("ionblaster new #{project} #{tag}",
               :name => "#{project} ionblaster new stack")
  commands.add("script/transition-traffic #{project}",
               :name => "#{project} transition traffic")
end

Executor.new(DIR).run
