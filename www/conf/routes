GET     /_internal_/healthcheck                                   controllers.Healthchecks.index()

GET     /                                                         controllers.Application.index(orgsPage: Int ?= 0, membershipRequestsPage: Int ?= 0, publicOrganizationsPage: Int ?= 0)

GET     /login                                                    controllers.LoginController.redirect
GET     /login/                                                   controllers.LoginController.index
POST    /login/                                                   controllers.LoginController.indexPost
POST    /login/register                                           controllers.LoginController.registerPost

GET     /logout                                                   controllers.LogoutController.logout
GET     /logged_out                                               controllers.LogoutController.logged_out

GET     /doc                                                      controllers.DocController.redirect
GET     /doc/                                                     controllers.DocController.index
GET     /doc/gettingStarted                                       controllers.DocController.gettingStarted
GET     /doc/apiJson                                              controllers.DocController.apiJson
GET     /doc/types                                                controllers.DocController.types
GET     /doc/clients                                              controllers.DocController.clients
GET     /doc/examples                                             controllers.DocController.examples
GET     /doc/history                                              controllers.DocController.history
GET     /doc/releaseNotes                                         controllers.DocController.releaseNotes
GET     /doc/todo                                                 controllers.DocController.todo
GET     /doc/playRoutesFile                                       controllers.DocController.playRoutesFile

GET     /org/create                                               controllers.Organizations.create
POST    /org/createPost                                           controllers.Organizations.createPost

GET     /generators                                               controllers.Generators.list()
POST    /generators/:guid/remove                                  controllers.Generators.postRemove(guid: java.util.UUID)
GET     /generators/create                                        controllers.Generators.create()
POST    /generators/postCreate                                    controllers.Generators.postCreate()
GET     /generators/update                                        controllers.Generators.update(generatorGuid: java.util.UUID, visibility: String, enabled: Boolean)
POST    /generators/postUpdate                                    controllers.Generators.postUpdate(generatorGuid: java.util.UUID)

GET     /:orgKey/members                                          controllers.Members.show(orgKey: String, page: Int ?= 0)
GET     /:orgKey/members/add                                      controllers.Members.add(orgKey: String)
POST    /:orgKey/members/addPost                                  controllers.Members.addPost(orgKey: String)
POST    /:orgKey/members/postRemove                               controllers.Members.postRemove(orgKey: String, guid: java.util.UUID)
POST    /:orgKey/members/postRevokeAdmin                          controllers.Members.postRevokeAdmin(orgKey: String, guid: java.util.UUID)
POST    /:orgKey/members/postMakeAdmin                            controllers.Members.postMakeAdmin(orgKey: String, guid: java.util.UUID)

GET     /:orgKey/domains                                          controllers.Domains.index(orgKey: String)
POST    /:orgKey/domains/:domain/remove                           controllers.Domains.postRemove(orgKey: String, domain: String)
GET     /:orgKey/domains/create                                   controllers.Domains.create(orgKey: String)
POST    /:orgKey/domains/postCreate                               controllers.Domains.postCreate(orgKey: String)

GET     /:orgKey/metadata                                         controllers.Metadata.show(orgKey: String)
GET     /:orgKey/metadata/edit                                    controllers.Metadata.edit(orgKey: String)
POST    /:orgKey/metadata/postEdit                                controllers.Metadata.postEdit(orgKey: String)

GET     /:orgKey/memberships/request                              controllers.Organizations.requestMembership(orgKey: String)
POST    /:orgKey/memberships/request                              controllers.Organizations.postRequestMembership(orgKey: String)
GET     /:orgKey/membership_requests                              controllers.Organizations.membershipRequests(orgKey: String, page: Int ?= 0)

POST    /:orgKey/membership_request_reviews/accept                controllers.MembershipRequestReviews.accept(orgKey: String, membership_request_guid: java.util.UUID)
POST    /:orgKey/membership_request_reviews/decline               controllers.MembershipRequestReviews.decline(orgKey: String, membership_request_guid: java.util.UUID)

GET     /:orgKey                                                  controllers.Organizations.show(orgKey: String, page: Int ?= 0)

GET     /:orgKey/version/create                                   controllers.Versions.create(orgKey: String, service: Option[String] ?= None)
POST    /:orgKey/version/createPost                               controllers.Versions.createPost(orgKey: String)

GET     /:orgKey/docs/:serviceKey/:version                        controllers.Versions.show(orgKey: String, serviceKey: String, version: String)
GET     /:orgKey/api.json/:serviceKey/:version                    controllers.Versions.apiJson(orgKey: String, serviceKey: String, version: String)
GET     /:orgKey/code/:serviceKey/:version/:generatorGuid         controllers.Code.generate(orgKey: String, serviceKey: String, version: String, generatorGuid: java.util.UUID)
GET     /:orgKey/settings/:serviceKey/:version                    controllers.ServiceSettings.show(orgKey: String, serviceKey: String, version: String)
GET     /:orgKey/settings/:serviceKey/:version/edit               controllers.ServiceSettings.edit(orgKey: String, serviceKey: String, version: String)
POST     /:orgKey/settings/:serviceKey/:version/postEdit          controllers.ServiceSettings.postEdit(orgKey: String, serviceKey: String, version: String)
POST     /:orgKey/settings/:serviceKey/:version/postDelete        controllers.ServiceSettings.postDelete(orgKey: String, serviceKey: String, version: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                             controllers.Assets.at(path="/public", file)

