{
    "name": "Apidoc Generator",
    "description": "Documentation for an apidoc code generator API",
    "base_url": "http://www.apidoc.me",

    "enums": {
        "type": {
            "values": [
                { "name": "primitive" },
                { "name": "model" },
                { "name": "enum" }
            ]
        },

        "container": {
            "values": [
                { "name": "singleton" },
                { "name": "list" },
                { "name": "map" }
            ]
        },

        "type_instance": {
            "values": [
                { "name": "container", "type", "container" },
                { "name": "type", "type", "type" }
            ]
        },

        "parameter_location": {
            "values": [
                { "name": "path" },
                { "name": "query" },
                { "name": "form" }
            ]
        }
    },

    "models": {

	"healthcheck": {
	    "fields": [
                { "name": "status", "type": "string", "example": "healthy" }
	    ]
	},

        "service_description": {
            "description": "Description of a service",
            "fields": [
                { "name": "enums", "type": "[enum]" },
                { "name": "models", "type": "[model]" },
                { "name": "headers", "type": "[header]" },
                { "name": "resources", "type": "[resource]" },
                { "name": "baseUrl", "type": "string", "required": false },
                { "name": "name", "type": "string" },
                { "name": "package_name", "type": "string", "description": "The package name when used by code generators (e.g. scala package name for the clients)", "required": false },
                { "name": "description", "type": "string", "required": false },
                { "name": "user_agent", "type": "string", "required": false }
            ]
        },

        "enum": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "description", "type": "string", "required": false },
                { "name": "values", "type": "[enum_value]" }
            ]
        },

        "enum_value": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "description", "type": "string", "required": false }
            ]
        },

        "model": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "plural", "type": "string" },
                { "name": "description", "type": "string", "required": false },
                { "name": "fields", "type": "[field]" }
            ]
        },

        "field": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "type" },
                { "name": "description", "type": "string", "required": false },
                { "name": "required", "type": "boolean" },
                { "name": "default", "type": "string", "required": false },
                { "name": "example", "type": "string", "required": false },
                { "name": "minimum", "type": "long", "required": false },
                { "name": "maximum", "type": "long", "required": false }
            ]
        },

        "header": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "type_instance" },
                { "name": "description", "type": "string", "required": false },
                { "name": "required", "type": "boolean" },
                { "name": "default", "type": "string", "required": false }
            ]
        },

        "resource": {
            "fields": [
                { "name": "model", "type": "model" },
                { "name": "path", "type": "string" },
                { "name": "operations", "type": "[operation]" }
            ]
        },

        "operation": {
            "fields": [
                { "name": "model", "type": "model" },
                { "name": "method", "type": "string" },
                { "name": "path", "type": "string" },
                { "name": "description", "type": "string", "required": false },
                { "name": "body", "type": "type_instance", "required": false },
                { "name": "parameters", "type": "[parameter]" },
                { "name": "responses", "type": "[response]" }
            ]
        },

        "parameter": {
            "fields": [
                { "name": "name", "type": "string" },
                { "name": "type", "type": "type_instance" },
                { "name": "location", "type": "parameter_location" },
                { "name": "description", "type": "string", "required": false },
                { "name": "default", "type": "string", "required": false },
                { "name": "example", "type": "string", "required": false },
                { "name": "minimum", "type": "long", "required": false },
                { "name": "maximum", "type": "long", "required": false }
            ]
        },

        "response": {
            "fields": [
                { "name": "code", "type": "integer" },
                { "name": "type", "type": "type_instance" }
            ]
        },

        "generator": {
            "description": "The generator metadata.",
            "fields": [
                { "name": "key", "type": "string" },
                { "name": "name", "type": "string" },
                { "name": "language", "type": "string", "required": false },
                { "name": "description", "type": "string", "required": false }
            ]
        },

        "invocation": {
          "description": "The result of invoking a generator.",
          "fields": [
            { "name": "source", "type": "string", "description": "The actual source code." }
          ]
        },

        "error": {
            "fields": [
                { "name": "code", "type": "string", "description": "Machine readable code for this specific error message" },
                { "name": "message", "type": "string", "description": "Description of the error" }
            ]
        }

    },

    "resources": {

	"healthcheck": {
	    "path": "/_internal_/healthcheck",
            "operations": [
                {
                    "method": "GET",
                    "responses": {
                        "200": { "type": "healthcheck" }
                    }
                }
	    ]
	},

        "generator": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Get all available generators",
                    "responses": {
                        "200": { "type": "[generator]" }
                    }
                },
                {
                  "method": "GET",
                  "path": "/:key",
                  "description": "Get the meta data of this generator",
                  "responses": {
                    "200": { "type": "generator" }
                  }
                }
	    ]
	},

	"invocation": {
	    "operations": [
		{
                    "method": "POST",
                    "path": "/:key",
                    "description": "Invoke a generator",
                    "body": { "type": "service_description" },
                    "responses": {
                        "200": { "type": "invocation" },
                        "409": { "type": "[error]" }
                    }
                }
            ]
        }
    }
}
